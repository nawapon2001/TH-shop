
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  category: 'category',
  description: 'description',
  image: 'image',
  images: 'images',
  rating: 'rating',
  reviews: 'reviews',
  sold: 'sold',
  discountPercent: 'discountPercent',
  deliveryInfo: 'deliveryInfo',
  promotions: 'promotions',
  stock: 'stock',
  sellerId: 'sellerId',
  sellerUsername: 'sellerUsername',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductOptionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  productId: 'productId'
};

exports.Prisma.ProductOptionValueScalarFieldEnum = {
  id: 'id',
  value: 'value',
  price: 'price',
  priceType: 'priceType',
  stock: 'stock',
  sku: 'sku',
  optionId: 'optionId'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  icon: 'icon',
  iconType: 'iconType',
  iconName: 'iconName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SellerScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  shopName: 'shopName',
  fullName: 'fullName',
  email: 'email',
  phone: 'phone',
  image: 'image',
  address: 'address',
  birthDate: 'birthDate',
  province: 'province',
  description: 'description',
  shopImage: 'shopImage',
  bankAccount: 'bankAccount',
  bankName: 'bankName',
  accountHolderName: 'accountHolderName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  orderNumber: 'orderNumber',
  totalAmount: 'totalAmount',
  status: 'status',
  customerInfo: 'customerInfo',
  shippingInfo: 'shippingInfo',
  items: 'items',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WishlistScalarFieldEnum = {
  id: 'id',
  user: 'user',
  items: 'items',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  phone: 'phone',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BannerScalarFieldEnum = {
  id: 'id',
  filename: 'filename',
  url: 'url',
  image: 'image',
  contentType: 'contentType',
  isSmall: 'isSmall',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AnnouncementScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  type: 'type',
  isActive: 'isActive',
  image: 'image',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminUserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderMessageScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  sender: 'sender',
  message: 'message',
  isRead: 'isRead',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.ProductOrderByRelevanceFieldEnum = {
  name: 'name',
  category: 'category',
  description: 'description',
  image: 'image',
  deliveryInfo: 'deliveryInfo',
  sellerUsername: 'sellerUsername'
};

exports.Prisma.ProductOptionOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.ProductOptionValueOrderByRelevanceFieldEnum = {
  value: 'value',
  priceType: 'priceType',
  sku: 'sku'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  icon: 'icon',
  iconType: 'iconType',
  iconName: 'iconName'
};

exports.Prisma.SellerOrderByRelevanceFieldEnum = {
  username: 'username',
  password: 'password',
  shopName: 'shopName',
  fullName: 'fullName',
  email: 'email',
  phone: 'phone',
  image: 'image',
  address: 'address',
  birthDate: 'birthDate',
  province: 'province',
  description: 'description',
  shopImage: 'shopImage',
  bankAccount: 'bankAccount',
  bankName: 'bankName',
  accountHolderName: 'accountHolderName'
};

exports.Prisma.OrderOrderByRelevanceFieldEnum = {
  orderNumber: 'orderNumber',
  status: 'status'
};

exports.Prisma.WishlistOrderByRelevanceFieldEnum = {
  user: 'user'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password',
  name: 'name',
  phone: 'phone',
  address: 'address'
};

exports.Prisma.BannerOrderByRelevanceFieldEnum = {
  filename: 'filename',
  url: 'url',
  contentType: 'contentType'
};

exports.Prisma.AnnouncementOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content',
  type: 'type',
  image: 'image'
};

exports.Prisma.AdminUserOrderByRelevanceFieldEnum = {
  username: 'username',
  email: 'email',
  password: 'password',
  role: 'role'
};

exports.Prisma.OrderMessageOrderByRelevanceFieldEnum = {
  sender: 'sender',
  message: 'message'
};


exports.Prisma.ModelName = {
  Product: 'Product',
  ProductOption: 'ProductOption',
  ProductOptionValue: 'ProductOptionValue',
  Category: 'Category',
  Seller: 'Seller',
  Order: 'Order',
  Wishlist: 'Wishlist',
  User: 'User',
  Banner: 'Banner',
  Announcement: 'Announcement',
  AdminUser: 'AdminUser',
  OrderMessage: 'OrderMessage'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\ShopLL\\TH-THAI\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x"
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl"
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-1.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\ShopLL\\TH-THAI\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../src/generated/prisma\"\n  binaryTargets = [\"native\", \"debian-openssl-1.1.x\", \"debian-openssl-3.0.x\", \"linux-musl\", \"rhel-openssl-1.0.x\"]\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Product {\n  id              Int             @id @default(autoincrement())\n  name            String          @db.VarChar(255)\n  price           Float\n  category        String?         @db.VarChar(100)\n  description     String?         @db.Text\n  image           String?         @db.VarChar(500)\n  images          Json? // JSON array สำหรับ images\n  options         ProductOption[]\n  rating          Float           @default(0)\n  reviews         Int             @default(0)\n  sold            Int             @default(0)\n  discountPercent Int             @default(0)\n  deliveryInfo    String?         @db.VarChar(255)\n  promotions      Json? // JSON array สำหรับ promotions\n  stock           Int             @default(999)\n  // เพิ่มการเชื่อมโยงกับ seller\n  seller          Seller?         @relation(fields: [sellerId], references: [id], onDelete: SetNull)\n  sellerId        Int?\n  sellerUsername  String?         @db.VarChar(50) // เก็บ username ของ seller สำหรับ query ง่าย\n  createdAt       DateTime        @default(now())\n  updatedAt       DateTime        @updatedAt\n\n  @@map(\"products\")\n}\n\nmodel ProductOption {\n  id        Int                  @id @default(autoincrement())\n  name      String               @db.VarChar(100)\n  product   Product              @relation(fields: [productId], references: [id], onDelete: Cascade)\n  productId Int\n  values    ProductOptionValue[]\n\n  @@map(\"product_options\")\n}\n\nmodel ProductOptionValue {\n  id        Int           @id @default(autoincrement())\n  value     String        @db.VarChar(100)\n  price     Float         @default(0)\n  priceType String        @default(\"add\") @db.VarChar(10) // 'add' หรือ 'replace'\n  stock     Int           @default(0)\n  sku       String?       @db.VarChar(50)\n  option    ProductOption @relation(fields: [optionId], references: [id], onDelete: Cascade)\n  optionId  Int\n\n  @@map(\"product_option_values\")\n}\n\n// Table สำหรับ Categories (ถ้าต้องการแยกออกมา)\nmodel Category {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique @db.VarChar(100)\n  description String?  @db.Text\n  icon        String?  @db.VarChar(500) // URL หรือ path ของไอคอน\n  iconType    String?  @db.VarChar(20) // 'system' หรือ 'upload'\n  iconName    String?  @db.VarChar(100) // ชื่อไอคอนระบบ\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"categories\")\n}\n\n// Table สำหรับ Sellers (ถ้ามีระบบผู้ขาย)\nmodel Seller {\n  id                Int       @id @default(autoincrement())\n  username          String    @unique @db.VarChar(50)\n  password          String?   @db.VarChar(255) // สำหรับ authentication\n  shopName          String?   @db.VarChar(100)\n  fullName          String?   @db.VarChar(100)\n  email             String?   @unique @db.VarChar(100)\n  phone             String?   @db.VarChar(20)\n  image             String?   @db.VarChar(500)\n  address           String?   @db.Text\n  birthDate         String?   @db.VarChar(20) // หรือ DateTime ตามต้องการ\n  province          String?   @db.VarChar(100)\n  description       String?   @db.Text\n  shopImage         String?   @db.VarChar(500)\n  bankAccount       String?   @db.VarChar(50)\n  bankName          String?   @db.VarChar(100)\n  accountHolderName String?   @db.VarChar(100)\n  products          Product[] // ความสัมพันธ์กับสินค้า\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n\n  @@map(\"sellers\")\n}\n\n// Table สำหรับ Orders (หากต้องการ)\nmodel Order {\n  id           Int      @id @default(autoincrement())\n  orderNumber  String   @unique @db.VarChar(50)\n  totalAmount  Float\n  status       String   @default(\"pending\") @db.VarChar(20) // pending, confirmed, shipped, delivered, cancelled\n  customerInfo Json // ข้อมูลลูกค้า\n  shippingInfo Json? // ข้อมูลการจัดส่ง\n  items        Json // รายการสินค้าที่สั่ง\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  messages OrderMessage[] // ความสัมพันธ์กับ messages\n\n  @@map(\"orders\")\n}\n\n// Table สำหรับ Wishlist\nmodel Wishlist {\n  id        Int      @id @default(autoincrement())\n  user      String   @db.VarChar(100) // user identifier\n  items     Json // JSON array ของสินค้าที่อยู่ใน wishlist\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([user])\n  @@map(\"wishlists\")\n}\n\n// Table สำหรับ Users (ลูกค้าทั่วไป)\nmodel User {\n  id        Int      @id @default(autoincrement())\n  email     String   @unique @db.VarChar(191) // Optimized for MySQL utf8mb4 indexing\n  password  String   @db.VarChar(255) // Adequate for bcrypt hashes\n  name      String?  @db.VarChar(100)\n  phone     String?  @db.VarChar(20)\n  address   String?  @db.Text\n  createdAt DateTime @default(now()) @db.Timestamp(0)\n  updatedAt DateTime @updatedAt @db.Timestamp(0)\n\n  @@index([email]) // Explicit index for faster lookups\n  @@map(\"users\")\n}\n\n// Table สำหรับ Banners\nmodel Banner {\n  id          Int      @id @default(autoincrement())\n  filename    String   @unique @db.VarChar(255)\n  url         String   @db.VarChar(500)\n  image       Bytes? // สำหรับ binary data\n  contentType String?  @db.VarChar(100)\n  isSmall     Boolean  @default(false)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"banners\")\n}\n\n// Table สำหรับ Announcements\nmodel Announcement {\n  id        Int       @id @default(autoincrement())\n  title     String    @db.VarChar(255)\n  content   String    @db.Text\n  type      String    @default(\"info\") @db.VarChar(50)\n  isActive  Boolean   @default(true)\n  image     String?   @db.VarChar(500)\n  startDate DateTime?\n  endDate   DateTime?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n\n  @@map(\"announcements\")\n}\n\n// Table สำหรับ Admin Users\nmodel AdminUser {\n  id        Int      @id @default(autoincrement())\n  username  String   @unique @db.VarChar(50)\n  email     String   @unique @db.VarChar(100)\n  password  String   @db.VarChar(255)\n  role      String   @default(\"admin\") @db.VarChar(50)\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"admin_users\")\n}\n\n// Table สำหรับ Order Messages\nmodel OrderMessage {\n  id        Int      @id @default(autoincrement())\n  orderId   Int\n  sender    String   @db.VarChar(50) // 'customer' or 'seller' or 'admin'\n  message   String   @db.Text\n  isRead    Boolean  @default(false)\n  createdAt DateTime @default(now())\n\n  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)\n\n  @@map(\"order_messages\")\n}\n",
  "inlineSchemaHash": "503c54ca8a0259d9687c5a55d9733d87fd4795e6fc0beb993e1cedb9cd15e210",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"options\",\"kind\":\"object\",\"type\":\"ProductOption\",\"relationName\":\"ProductToProductOption\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"reviews\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"discountPercent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deliveryInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promotions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"Seller\",\"relationName\":\"ProductToSeller\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sellerUsername\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"products\"},\"ProductOption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductOption\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"values\",\"kind\":\"object\",\"type\":\"ProductOptionValue\",\"relationName\":\"ProductOptionToProductOptionValue\"}],\"dbName\":\"product_options\"},\"ProductOptionValue\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"priceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"option\",\"kind\":\"object\",\"type\":\"ProductOption\",\"relationName\":\"ProductOptionToProductOptionValue\"},{\"name\":\"optionId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":\"product_option_values\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"categories\"},\"Seller\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"province\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankAccount\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountHolderName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToSeller\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"sellers\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"shippingInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"items\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"OrderMessage\",\"relationName\":\"OrderToOrderMessage\"}],\"dbName\":\"orders\"},\"Wishlist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"wishlists\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"users\"},\"Banner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"Bytes\"},{\"name\":\"contentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isSmall\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"banners\"},\"Announcement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"announcements\"},\"AdminUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"admin_users\"},\"OrderMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderMessage\"}],\"dbName\":\"order_messages\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

